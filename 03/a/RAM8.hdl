// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=registerZero, b=registerOne, c=registerTwo, d=registerThree, e=registerFour, f=registerFive, g=registerSix, h=registerSeven);

    Register(in=in, load=registerZero,  out=rZeroOut);
    Register(in=in, load=registerOne,   out=rOneOut);
    Register(in=in, load=registerTwo,   out=rTwoOut);
    Register(in=in, load=registerThree, out=rThreeOut);
    Register(in=in, load=registerFour,  out=rFourOut);
    Register(in=in, load=registerFive,  out=rFiveOut);
    Register(in=in, load=registerSix,   out=rSixOut);
    Register(in=in, load=registerSeven, out=rSevenOut);

    Mux8Way16(a=rZeroOut, b=rOneOut, c=rTwoOut, d=rThreeOut, e=rFourOut, f=rFiveOut, g=rSixOut, h=rSevenOut, sel=address, out=out);
}