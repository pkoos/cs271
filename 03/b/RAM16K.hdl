// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

// Name: Paul Koos

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[12..13], a=zero, b=one, c=two, d=three);

    RAM4K(in=in, address=address[0..11], load=zero,  out=outZero);
    RAM4K(in=in, address=address[0..11], load=one,   out=outOne);
    RAM4K(in=in, address=address[0..11], load=two,   out=outTwo);
    RAM4K(in=in, address=address[0..11], load=three, out=outThree);

    Mux4Way16(a=outZero, b=outOne, c=outTwo, d=outThree, sel=address[12..13], out=out);
}