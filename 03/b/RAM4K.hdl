// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=zero, b=one, c=two, d=three, e=four, f=five, g=six, h=seven);

    RAM512(in=in, address=address[0..8], load=zero,  out=outZero);
    RAM512(in=in, address=address[0..8], load=one,   out=outOne);
    RAM512(in=in, address=address[0..8], load=two,   out=outTwo);
    RAM512(in=in, address=address[0..8], load=three, out=outThree);
    RAM512(in=in, address=address[0..8], load=four,  out=outFour);
    RAM512(in=in, address=address[0..8], load=five,  out=outFive);
    RAM512(in=in, address=address[0..8], load=six,   out=outSix);
    RAM512(in=in, address=address[0..8], load=seven, out=outSeven);

    Mux8Way16(a=outZero, b=outOne, c=outTwo, d=outThree, e=outFour, f=outFive, g=outSix, h=outSeven, sel=address[9..11], out=out);
}